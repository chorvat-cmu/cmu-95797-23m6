models:
  - name: stg__bike_data
    description: "Information about bike trips, including location and duration"
    columns:
      - name: started_at_ts
        description: "time trip started"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: ended_at_ts
        description: "time trip ended"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: tripduration
        description: "duration of trip in seconds"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: BIGINT

      - name: start_station_id
        description: "the start station identifier"

      - name: start_station_name
        description: "the name of the start station"

      - name: start_lat
        description: "the latitude of the start location"
        tests:
          # - not_null -- Going to accept that some rows have null values
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -90.0
              max_value: 90.0

      - name: start_lng
        description: "the longitude of the start location"
        tests:
          # - not_null -- Going to accept that some rows have null values
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -180.0
              max_value: 180.0

      - name: end_station_id
        description: "the end station identifier"

      - name: end_station_name
        description: "the end station name"

      - name: end_lat
        description: "the latitude of the end station"
        tests:
          # - not_null -- Going to accept that some rows have null values
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -90.0
              max_value: 90.0

      - name: end_lng
        description: "the longitude of the end station"
        tests:
          # - not_null -- Going to accept that some rows have null values
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: -180.0
              max_value: 180.0

      - name: filename
        description: ""

  - name: stg__central_park_weather
    description: "data on weather in central park over time"
    columns:
      - name: station
        description: "weather station"

      - name: name
        description: "name of weather station"

      - name: date
        description: "date"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date

      - name: awnd
        description: "wind speed"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: prcp
        description: "precipitation"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: snow
        description: "snowfall"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: snwd
        description: "snow depth"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: tmax
        description: "maximum temperature"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int

      - name: tmin
        description: "minimum temperature"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int

      - name: filename
        description: ""

  - name: stg__fhv_bases
    description: "data on for-fire vehicle bases"
    columns:
      - name: base_number
        description: "license number of the dispatching base"

      - name: base_name
        description: "official name of the base entity"

      - name: dba
        description: "the 'doing business as' name of the base"

      - name: dba_category
        description: "the type of dba base name"

      - name: filename
        description: ""

  - name: stg__fhv_tripdata
    description: "data on for-hire vehicle trips"
    columns:
      - name: dispatching_base_num
        description: "the tlc base license number of the base dispatching the trip"
        tests:
        - relationships:
            to: ref('staging','stg__fhv_bases')
            field: base_number

      - name: pickup_datetime
        description: "datetime of pickup"

      - name: dropoff_datetime
        description: "datetime of dropoff"

      - name: pulocationid
        description: "TLC taxi zone in which the trip began"

      - name: dolocationid
        description: "TLC taxi zone in which the trip ended"

      - name: affiliated_base_number
        description: "the base numer affiliated with the vehicle"

      - name: filename
        description: ""

  - name: stg__fhvhv_tripdata
    description: "data on high volume for-hire vehicle trips"
    columns:
      - name: hvfhs_license_num
        description: "the tlc license number of the high-volume for-hire base or business"

      - name: dispatching_base_num
        description: "the tlc base license number of the base dispatching the trip"

      - name: originating_base_num
        description: "the tlc base license number of the base receiving the original request"

      - name: request_datetime
        description: "the datetime of the request"

      - name: on_scene_datetime
        description: "arrival datetime"

      - name: pickup_datetime
        description: "the datetime of the pickup"

      - name: dropoff_datetime
        description: "the datetime of the dropff"

      - name: pulocationid
        description: "tlc taxi zone in which the trip began"

      - name: dolocationid
        description: "tlc taxi zone in which the trip ended"

      - name: trip_miles
        description: "total miles for passenger trip"

      - name: trip_time
        description: "total time in seconds for passenger trip"

      - name: base_passenger_fare
        description: "base passenger fare before tolls, tips, taxes, and fees"

      - name: tolls
        description: "total amount of all tolls paid in trip"

      - name: bcf
        description: "total amount collected in trip for black car fund"

      - name: sales_tax
        description: "total amount collected in trip for NYS sales tax"

      - name: congestion_surcharge
        description: "total amount collected in trip for NYS congestion surcharge"

      - name: airport_fee
        description: "$2.50 for both drop off an pickup at LGA, Newark, and JFK"

      - name: tips
        description: "total amount of tips received from passenger"

      - name: driver_pay
        description: "total triver pay not incl tolls or tips and net of commission, surcharges or taxes"

      - name: shared_request_flag
        description: "did the passenger agree to a pooled ride, Y or N"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: shared_match_flag
        description: "did the passenger share the vehicle, Y or N"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: access_a_ride_flag
        description: "was the trip administered by the MTA, Y or N"
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: wav_request_flag
        description: "did the passenger req a wheelchair accessible vehicle, Y or N"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: wav_match_flag
        description: "did the trip occur in a wheelchar accessible vehicle, Y or N"
        tests:
          - not_null
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: filename
        description: ""

  - name: stg__green_tripdata
    description: "green line tripdata"
    columns:
      - name: vendorid
        description: "code indicating LPEP provider that provided the record, 1. creative mobile technologies or 2. verifone"

      - name: lpep_pickup_datetime
        description: "date and time when the meter was engaged"

      - name: lpep_dropoff_datetime
        description: "date and time when the meter was disengaged"

      - name: store_and_fwd_flag
        description: "indicates whether the trip record was held in vehicle memory before sending to the vendor, Y or N"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: ratecodeid
        description: "the final rate code in effect at the end of the trip: 1. standard rate 2. JFK 3. Newark 4. Nassau or Westchester 5. Negotiated fare 6. Group ride"

      - name: pulocationid
        description: "tlc taxi zone in which the taximeter was engaged"

      - name: dolocationid
        description: "tlc taxi zone in which the taximeter was disengaged"

      - name: passenger_count
        description: "the number of passengers in the vehicle"

      - name: trip_distance
        description: "the elapsed trip distance in miles reported by the taximeter"

      - name: fare_amount
        description: "the time-and-distance fare calculated by the meter"

      - name: extra
        description: "misc extras and surcharges, incl $0.50 and $1 rush hour and overnight charges"

      - name: mta_tax
        description: "$0.50 mta tax automatically trigered based on the metered rate in use"

      - name: tip_amount
        description: "tip amount, automatically caculated for credit card tips, cash tips not incl"

      - name: tolls_amount
        description: "total amount of all tolls in a trip"

      - name: ehail_fee
        description: "fee for using ehail service"

      - name: improvement_surcharge
        description: "$0.30 improvement surcahrged for hailed trips assessed at the flag drop, begain in 2015"

      - name: total_amount
        description: "total amount charged to passengers, not incl cash tips"

      - name: payment_type
        description: "method of payment"

      - name: trip_type
        description: "code indicate 1. street-hail or 2. dispatch"

      - name: congestion_surcharge
        description: "surcharge for congested route"

      - name: filename
        description: ""

  - name: stg__yellow_tripdata
    description: "data on yellow taxi trips"
    columns:
      - name: vendorid
        description: "a code indicating the tpep provider 1. creative mobile technologies or 2. verifone"

      - name: tpep_pickup_datetime
        description: "the datetime when the meter was engaged"

      - name: tpep_dropoff_datetime
        description: "the datetime when the meter was disengaged"

      - name: passenger_count
        description: "number of passengers in the vehicle"

      - name: trip_distance
        description: "elapsed distance in miles"

      - name: ratecodeid
        description: "the final rate code at the end of the trip, 1. standard 2. JFK 3. Newark 4. Nassau or Westchester 5. Negotiated 6. group ride"

      - name: store_and_fwd_flag
        description: "flag indicating whether trip was in vehicle memory before sending to the vendor, Y or N"
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: boolean

      - name: pulocationid
        description: "tlc taxi zone in which the taximeter was engaged"

      - name: dolocationid
        description: "tlc taxi zone in which the taximeter was engaged"

      - name: payment_type
        description: "numeric code indicating how the passenger paid for the trip, 1. credit card 2. cash 3. no charge 4. dispute 5. unknown 6. voided trip"

      - name: fare_amount
        description: "the time and distance fare calculated by the meter"

      - name: extra
        description: "misc extras and surcharges, $0.50 and $1 rush and overnight charges"

      - name: mta_tax
        description: "$0.50 mta tax triggered based on metered rate in use"

      - name: tip_amount
        description: "amount of tip for credit card purchases, does not incl cash"

      - name: tolls_amount
        description: "total amount of all tolls paid in trip"

      - name: improvement_surcharge
        description: "$0.30 improvement surcharge assessed at the flag drop, begin in 2015"

      - name: total_amount
        description: "total amount of charge to passenger, not incl cash tips"

      - name: congestion_surcharge
        description: "total amount collected in trip for NYS congestion surcharge"

      - name: airport_fee
        description: "$1.25 for pick up only at LGA and JFK"

      - name: filename
        description: ""
